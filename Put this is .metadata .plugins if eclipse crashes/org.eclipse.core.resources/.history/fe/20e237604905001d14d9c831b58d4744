package com.bst;

public class BST {
	public class Node {
		private String word;
		private int frequency;
		private Node left, right;
		
		public Node(String word) {
			this.word = word;
			this.frequency = 1;
		}
		
		public String getWord() {
			return word;
		}
		
		public int getFrequency() {
			return frequency;
		}
		
		public void incrementWordFrequency() {
			frequency += 1;
		}
	}
	private Node root;
	
	public Node getRoot() {
		return root;
	}
	
	public Node insertWord(Node root, String word) {
		if(root == null) {
			root = new Node(word);
		} else {
			if(word.compareTo(root.word) < 0) {
				root.left = insertWord(root.left, word);
			} else if(word.compareTo(root.word) > 0) {
				root.right = insertWord(root.right, word);
			} else {
				root.incrementWordFrequency();
				return null;
			}			
		}
		
		return root;
	}
	
	public Node insert(String word) {
		root = insertWord(root, word);
		return root;
	}
	
	private void inorder(Node root) {
		if(root == null) return;
		
		inorder(root.left);
		System.out.println(root.word + " : " + root.frequency);
		inorder(root.right);		
	}
	
	public void display() {
		System.out.println("=====");
		System.out.println(root);
		inorder(root);
		System.out.println("=====");
	}
}
