package com.linkedlist;

public class LinkedList {
	public class Node {
		private int data;
		private Node next, prev;
		
		public Node(int data) {
			this.data = data;
		}
		
		public int getData() {
			return data;
		}
	}
	private Node head;
	
	public Node getHead() {
		return head;
	}
	
	public Node insert(int data) {
		Node newNode = new Node(data);
		
		if(head == null) {
			head = newNode;
		} else {
			Node currentNode = head;
			while(currentNode.next != null) {
				currentNode = currentNode.next;
			}
			newNode.prev = currentNode;
			currentNode.next = newNode;
		}
		
		return newNode;
	}
	
	public Node remove(int data) {
        Node currentNode = head;
 
        if(currentNode != null && currentNode.data == data) {
            head = currentNode.next;
            head.prev = null;
            return currentNode;
        }
 
        while(currentNode != null && currentNode.data != data) {
        	currentNode = currentNode.next;
        }
 
        if(currentNode == null) {
        	return null;
        }
        if(currentNode.prev != null) {
        	currentNode.prev.next = currentNode.next;        	
        }
        if(currentNode.next != null) {
        	currentNode.next.prev = currentNode.prev;        	
        }
        return currentNode;
	}
	
	public void display() {
		Node currentNode = head;
		
		while(currentNode != null) {
			System.out.print("[" + currentNode.data + "] -> ");
			currentNode = currentNode.next;
		}
	}
	
	public void displayReverse() {
		Node currentNode = head;
		
		while(currentNode != null && currentNode.next != null) {
			currentNode = currentNode.next;
		}
		
		while(currentNode != null) {
			System.out.print("<- [" + currentNode.data + "]");
			currentNode = currentNode.prev;
		}
		System.out.println();
	}
	
}