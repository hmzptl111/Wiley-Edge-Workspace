package com.bean;

import java.util.Objects;
import java.util.Optional;

public class Project {
	public final static int EMPLOYEES_CAPACITY = 10;
	private int id;
	private String name;
	
	public Project(Optional<Integer> id, Optional<String> name) {
		if(id.isPresent() && name.isPresent()) {
			this.id = id.get();
			this.name = name.get();			
		}
	}

	public Optional<Integer> getId() {
		return Optional.ofNullable(id);
	}

	public void setId(Optional<Integer> id) {
		id.ifPresent(employeeId -> {
			this.id = employeeId;			
		});
	}

	public Optional<String> getName() {
		return Optional.ofNullable(name);
	}

	public void setName(Optional<String> name) {
		name.ifPresent(employeeName -> {
			this.name = employeeName;			
		});
	}

	@Override
	public String toString() {
		return "Project [id=" + id + ", name=" + name + "]";
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, name);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Project other = (Project) obj;
		return id == other.id;
//		return id == other.id && Objects.equals(name, other.name);
	}
}








//package com.bean;
//
//import java.util.Objects;
//
//public class Project {
//	public final static int EMPLOYEES_CAPACITY = 10;
//	private int id;
//	private String name;
//	
//	public Project(int id, String name) {
//		this.id = id;
//		this.name = name;
//	}
//
//	public int getId() {
//		return id;
//	}
//
//	public void setId(int id) {
//		this.id = id;
//	}
//
//	public String getName() {
//		return name;
//	}
//
//	public void setName(String name) {
//		this.name = name;
//	}
//
//	@Override
//	public String toString() {
//		return "Project [id=" + id + ", name=" + name + "]";
//	}
//
//	@Override
//	public int hashCode() {
//		return Objects.hash(id, name);
//	}
//
//	@Override
//	public boolean equals(Object obj) {
//		if (this == obj)
//			return true;
//		if (obj == null)
//			return false;
//		if (getClass() != obj.getClass())
//			return false;
//		Project other = (Project) obj;
//		return id == other.id;
////		return id == other.id && Objects.equals(name, other.name);
//	}
//}